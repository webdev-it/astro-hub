import { useState, useEffect } from 'react'
import { validateCoordinateConversion, latLngToECEF, ecefToLatLng } from '../utils/coordinates'
import { vincentyDistance } from '../utils/geodesy'

type Props = {
  targetLat: number
  targetLng: number
  actualImpactECEF?: { x: number, y: number, z: number }
  isVisible: boolean
}

export default function CoordinateDebugger({ targetLat, targetLng, actualImpactECEF, isVisible }: Props) {
  const [debugInfo, setDebugInfo] = useState<any>(null)

  useEffect(() => {
    if (!isVisible) return

    // –†–∞—Å—á–µ—Ç –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    const targetECEF = latLngToECEF(targetLat, targetLng, 0)
    const targetValidation = validateCoordinateConversion(targetLat, targetLng)
    
    let actualCoords = null
    let coordinateError = null
    
    if (actualImpactECEF) {
      actualCoords = ecefToLatLng(actualImpactECEF)
      
      // –†–∞—Å—á–µ—Ç –æ—à–∏–±–∫–∏ –º–µ–∂–¥—É —Ü–µ–ª–µ–≤—ã–º–∏ –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
      const latError = Math.abs(targetLat - actualCoords.lat)
      const lngError = Math.abs(targetLng - actualCoords.lng)
      const dist = vincentyDistance({ lat: targetLat, lng: targetLng }, actualCoords)
      coordinateError = { lat: latError, lng: lngError, distance: dist }
    }

    setDebugInfo({
      target: { lat: targetLat, lng: targetLng },
      targetECEF,
      targetValidation,
      actual: actualCoords,
      coordinateError
    })
  }, [targetLat, targetLng, actualImpactECEF, isVisible])

  if (!isVisible || !debugInfo) return null

  return (
    <div style={{ 
      backgroundColor: '#1a1a1a', 
      border: '1px solid #333', 
      borderRadius: '8px', 
      padding: '20px',
      marginTop: '20px'
    }}>
      <h3 style={{ color: '#fff', marginBottom: '20px' }}>üêõ –û—Ç–ª–∞–¥–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç</h3>
      
      <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}>
        
        {/* –¶–µ–ª–µ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã */}
        <div style={{ backgroundColor: '#2a2a2a', padding: '15px', borderRadius: '6px' }}>
          <h4 style={{ color: '#fff', marginBottom: '10px' }}>üéØ –¶–µ–ª–µ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã</h4>
          <div style={{ color: '#ccc', fontSize: '13px', fontFamily: 'monospace' }}>
            <p><strong>–®–∏—Ä–æ—Ç–∞:</strong> {debugInfo.target.lat.toFixed(6)}¬∞</p>
            <p><strong>–î–æ–ª–≥–æ—Ç–∞:</strong> {debugInfo.target.lng.toFixed(6)}¬∞</p>
            <p><strong>ECEF X:</strong> {debugInfo.targetECEF.x.toFixed(0)} –º</p>
            <p><strong>ECEF Y:</strong> {debugInfo.targetECEF.y.toFixed(0)} –º</p>
            <p><strong>ECEF Z:</strong> {debugInfo.targetECEF.z.toFixed(0)} –º</p>
            <p style={{ color: debugInfo.targetValidation.isValid ? '#4CAF50' : '#FF9800' }}>
              <strong>–¢–æ—á–Ω–æ—Å—Ç—å:</strong> {debugInfo.targetValidation.error.toFixed(1)} –º
            </p>
          </div>
        </div>

        {/* –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–¥–∞—Ä–∞ */}
        <div style={{ backgroundColor: '#2a2a2a', padding: '15px', borderRadius: '6px' }}>
          <h4 style={{ color: '#fff', marginBottom: '10px' }}>üí• –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —É–¥–∞—Ä</h4>
          {debugInfo.actual ? (
            <div style={{ color: '#ccc', fontSize: '13px', fontFamily: 'monospace' }}>
              <p><strong>–®–∏—Ä–æ—Ç–∞:</strong> {debugInfo.actual.lat.toFixed(6)}¬∞</p>
              <p><strong>–î–æ–ª–≥–æ—Ç–∞:</strong> {debugInfo.actual.lng.toFixed(6)}¬∞</p>
              {debugInfo.coordinateError && (
                <>
                  <p style={{ color: '#FF6B35', marginTop: '10px' }}>
                    <strong>–û—à–∏–±–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:</strong>
                  </p>
                  <p><strong>Œî –®–∏—Ä–æ—Ç–∞:</strong> {debugInfo.coordinateError.lat.toFixed(6)}¬∞</p>
                  <p><strong>Œî –î–æ–ª–≥–æ—Ç–∞:</strong> {debugInfo.coordinateError.lng.toFixed(6)}¬∞</p>
                  <p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> {(debugInfo.coordinateError.distance/1000).toFixed(1)} –∫–º</p>
                </>
              )}
            </div>
          ) : (
            <p style={{ color: '#666', fontStyle: 'italic' }}>–°–∏–º—É–ª—è—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</p>
          )}
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é */}
      {debugInfo.coordinateError && debugInfo.coordinateError.distance > 1000 && (
        <div style={{ 
          marginTop: '15px', 
          padding: '15px', 
          backgroundColor: '#3a1a1a', 
          borderRadius: '6px',
          borderLeft: '4px solid #FF6B35'
        }}>
          <h5 style={{ color: '#FF6B35', marginBottom: '10px' }}>‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –±–æ–ª—å—à–∞—è –æ—à–∏–±–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç!</h5>
          <p style={{ color: '#ccc', fontSize: '13px' }}>
            –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –±–æ–ª–µ–µ {(debugInfo.coordinateError.distance/1000).toFixed(1)} –∫–º —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É –≤ 
            –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –º–µ–∂–¥—É 3D —Å—Ü–µ–Ω–æ–π –∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏. 
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ llhToECEF() –∏ ecefToLatLng().
          </p>
        </div>
      )}

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ */}
      <div style={{ 
        marginTop: '15px', 
        padding: '15px', 
        backgroundColor: '#2a2a2a', 
        borderRadius: '6px'
      }}>
        <h5 style={{ color: '#fff', marginBottom: '10px' }}>üìä –ê–Ω–∞–ª–∏–∑ —Ç–æ—á–Ω–æ—Å—Ç–∏</h5>
        <div style={{ color: '#ccc', fontSize: '13px' }}>
          <p><strong>–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:</strong> {
            !debugInfo.coordinateError ? '–û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö' :
            debugInfo.coordinateError.distance < 1000 ? 'üü¢ –û—Ç–ª–∏—á–Ω–æ–µ (<1 –∫–º)' :
            debugInfo.coordinateError.distance < 10000 ? 'üü° –ü—Ä–∏–µ–º–ª–µ–º–æ–µ (<10 –∫–º)' : 
            'üî¥ –¢—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (>10 –∫–º)'
          }</p>
          <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> {
            !debugInfo.coordinateError ? '–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–º—É–ª—è—Ü–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞' :
            debugInfo.coordinateError.distance < 1000 ? '–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' :
            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç'
          }</p>
        </div>
      </div>
    </div>
  )
}